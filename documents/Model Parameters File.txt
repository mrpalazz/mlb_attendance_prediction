

XGBoost Regressor

Model Parameters Tuned

params = {
        'min_child_weight': [1, 5, 10, 15, 18],
        'gamma': [0.5, 1, 1.5, 2, 5, 7],
        'subsample': [0.6, 0.8, 1.0],
        'colsample_bytree': [0.6, 0.8, 1.0],
        'max_depth': [3, 4, 5, 7, 9],
        'learning_rate': [0.00001, 0.0001, 0.001, 0.01, 0.1, 0.2, 0.3, 0.5],
        'n_estimators' : [200, 500, 1000, 2000, 4500]


XGBoost Model

xgb = xgb.XGBRegressor( n_estimators=50, random_state = 42)
XGB_random = RandomizedSearchCV(estimator = xgb, param_distributions = params, n_iter = 15, cv = 5, verbose=4, random_state=42, n_jobs = -1, 
scoring =  neg_mean_absolute_percentage_error')
XGB_random.fit(X_train_scaled, y_train)


Best Estimator

XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1.0, gamma=0.5, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.2, max_delta_step=0, max_depth=7,
             min_child_weight=15, missing=nan, monotone_constraints='()',
             n_estimators=4500, n_jobs=0, num_parallel_tree=1, random_state=42,
             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=0.8,
             tree_method='exact', validate_parameters=1, verbosity=None)



-----------------------------------------------------------------------

Random Forest Regressor


Model Parameters Tuned

random_grid = {'n_estimators': n_estimators,
               'max_features': max_features,
               'max_depth': max_depth,
               'min_samples_split': min_samples_split,
               'min_samples_leaf': min_samples_leaf,
               'bootstrap': bootstrap}


Random Forest Model

RandomizedSearchCV(cv=5,
                   estimator=RandomForestRegressor(n_estimators=50,
                                                   random_state=42)


Best Estimator

RandomForestRegressor(bootstrap=False, max_depth=60, min_samples_leaf=4,
                      min_samples_split=10, n_estimators=854, random_state=42)



------------------------------------------------------------------------

Stochastic Gradient Descent Regression



Model Parameters Tuned

SGD = SGDRegressor(max_iter=1000, tol=1e-3)
SGD.fit(X_train_scaled, y_train)



Random Forest Model

SGD = SGDRegressor(max_iter=1000, tol=1e-3)
SGD.fit(X_train_scaled, y_train)

